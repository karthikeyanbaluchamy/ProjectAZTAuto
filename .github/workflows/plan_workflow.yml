name: plan Azure workflow
on: 
  workflow_call:
     outputs:
       tfplanexitcode:
         description: "Terraform plan exit code"
         value: ${{ jobs.plan_workflow.outputs.tfplanexitcode }}
jobs:
  plan_workflow:
    runs-on: ubuntu-latest
    outputs:
      tfplanexitcode: ${{ steps.planop.outputs.exitcode }}
    steps:
       - name: Check out repository
         uses: actions/checkout@v3

       - name: Set up Terraform
         uses: hashicorp/setup-terraform@v2
         with:
          terraform_version: latest  
       - name: Terraform Init
         env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_C_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_C_CIR }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_S_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_T_ID }}
         run: terraform init -backend-config="resource_group_name=${{secrets.BACKEND_AZURE_RG_NAME}}" -backend-config="storage_account_name=${{secrets.BACKEND_AZURE_STORAGE_ACCOUNT_NAME}}" -backend-config="container_name=${{secrets.BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME}}" -backend-config="key=${{secrets.BACKEND_AZURE_ACCOUNT_KEY}}"
        
       - name: Terraform Plan
         id: planop
         env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_C_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_C_CIR }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_S_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_T_ID }}
         run: |
            export exitcode=0
            terraform plan -detailed-exitcode -no-color -out tfplan || export exitcode=$?
          
            echo "exitcoderesult=$exitcode"
          
            echo "exitcode=$exitcode" >> $GITHUB_OUTPUT
          
            if [ $exitcode -eq 1 ]; then
              echo Terraform Plan Failed!
              exit 1
            else 
              exit 0
            fi
       - name: Publish Terraform Plan
         uses: actions/upload-artifact@v4
         with:
           name: tfplan
           path: tfplan 
       - name: Create html output
         id: planstr
         run: |
           TERRAFORM_PLAN=$(terraform show -no-color tfplan)
           delimiter="$(openssl rand -hex 8)"
           echo "summary<<${delimiter}" >> $GITHUB_OUTPUT
           echo "## Terraform Plan Output" >> $GITHUB_OUTPUT
           echo "<details><summary>Click to expand</summary>" >> $GITHUB_OUTPUT
           echo "" >> $GITHUB_OUTPUT
           echo '```terraform' >> $GITHUB_OUTPUT
           echo "$TERRAFORM_PLAN" >> $GITHUB_OUTPUT
           echo '```' >> $GITHUB_OUTPUT
           echo "</details>" >> $GITHUB_OUTPUT
           echo "${delimiter}" >> $GITHUB_OUTPUT
       - name: Publish Terraform Plan to Task Summary
         env:
           SUMMARY: ${{ steps.planstr.outputs.summary }}
         run: |
           echo "$SUMMARY" >> $GITHUB_STEP_SUMMARY    
         
